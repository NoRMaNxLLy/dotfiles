#!/bin/sh

if ! command -v bc >/dev/null; then
    echo "bc is not found."
    exit 1
fi

# the reason why obase is first because bc(1) is affected by the
# inputbase. if for example we put ibase=2 first, bc now only
# understandt 1 and 0. so specify obase=10 to output decimal is not
# valid because bc sees it as 2 in decimal
_convert() {
    bc << EOF
obase=$2
ibase=$1
$3
EOF
}

from="$1"
case "${from}" in
    bin*|2)  from=2 ;;
    dec*|10) from=10;;
    hex*|16) from=16;;
esac
shift

to="$1"
case "${to}" in
    bin*|2)  to=2 ;;
    dec*|10) to=10;;
    hex*|16) to=16;;
esac
shift

# if no args, read stdin
if test $# -gt 0; then
    for i in "$@"; do
        _convert ${from} ${to} $i
    done
    exit
fi

while IFS= read -r i; do
    _convert ${from} ${to} $i
done

