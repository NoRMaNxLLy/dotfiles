#!/bin/bash

# just do not do it this way: ':smile::sad:'. It wont work as expected
declare -A emojies=(
[smile]=🙂 [tear]=😢 [happy]=😃 [lol]=🤣 [hot]=🥵 [cool]=😎 [skull]=💀
[sad]=☹️  [crying]=😭 [thinking]=🤔 [xd]=😆 [cold]=🥶 [fire]=🔥 [ghost]=👻
[bot]=🤖 [cowboy]=🤠 [heart]=❤️  [celebrate]=🥳 [disappointed]=😞 [frog]=🐸
[mindblow]=🤯 [evil]=😈 [scared]=😱
#😵😗😟😚 😪😳🤕😮 🤩🤑😼 🤥☺️ 😹🤬😈 😤😃 😫😽🥰‍
#🥸😉🙂😦 😡☠️😬🤓 😓😸😄🙁 👺🤡👹😴 😿😋😷😊 🤤👾🥴 😲🥺🤒 😌🤧🤗
#😇😒👽😨 😝😶😑 🤣😖😛😅 🎃😙🤫😥 🤪😜😏 🙀😰🧐🤢 #😵💫😕😘🤨
#🤮😣😞🤭 😯😁 😾😔🥲 😍😀😧 #❤️🩹😂🥱😻 #😩😺👿😐 😶🌫️🤐😠😮💨 🙄
)

pattern=':([a-zA-Z]+):'

while IFS=$'\n' read -r line; do
    # look for :key: only if the pattern is matched.
    if [[ ${line} =~ ${pattern} ]]; then
        for word in ${line}; do
            # check the word if it matches, otherwise skip it.
            [[ ${word} =~ ${pattern} ]] || continue
            key=${BASH_REMATCH[1]}
            emoji=${emojies[${key,,}]:-:${key}:} # if no key, leave it.
            line=${line//:${key}:/${emoji}}
        done
    fi
    echo "${line}"  # quoting saves the indentation of the line 🤔
done < ${1:-/dev/stdin}
